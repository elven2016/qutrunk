简介
==========

QuTrunk
------------------
QuTrunk是一个免费、开源和跨平台的量子计算编程框架，包括量子编程API、量子命令转译、量子计算后端接口等，由启科量子科技有限公司研发。QuTrunk使用Python作为宿主语言，利用Python的语法特性实现针对量子程序的DSL(领域专用语言)。
QuTrunk基于量子逻辑门、量子线路等概念提供量子编程所需各类API，这些API由相应的模块实现，比如QCircuit实现了量子线路，Qubit实现量子比特，Qureg实现量子寄存器，Command对应每个量子门操作的指令，
Backend代表运行量子线路的后端模块，gate模块里面实现了各类基础量子门操作。
同时QuTrunk还可以作为其他上层量子计算应用的基础，比如：量子算法、量子可视化编程、量子机器学习等。

关键特性
------------------
1.  基于量子逻辑门，量子线路实现量子编程。
2.  提供QuSL量子汇编指令标准，QuSL量子汇编与Python代码完全兼容。
3.  支持多种量子计算后端模块，比如：BackendLocalPy(本地Python版本模拟器)；BackendLocalCpp(本地C++版本模拟器)；BackendQuSprout(量子计算云服务)；BackendIBM(IBM量子云计算平台)等。
4.  本地量子计算后端提供全振幅量子模拟计算，量子云服务提供：OMP多线程、多点并行MPI、GPU等计算加速，同时预留了接口对接离子阱量子计算机。
5.  兼容OpenQASM/2.0标准。
6.  支持量子可视化编程（需要配合启科量子研发的量子集成开发环境QuBranch）。
7.  在经典计算机上模拟量子程序，提供全振幅计算。
8.  提供资源统计。

主要功能模块
------------------
QCircuit
>>>>>>>>>>>>>>>>
 量子线路，维护对所有量子比特的各种门操作及操作时序，代表了整个量子算法的实现。
Qubit
>>>>>>>>>>>>>>>>
 代表单个量子比特，是量子门操作的对象。
Qureg
>>>>>>>>>>>>>>>>
 维护若干个量子比特，用于实现一个具体的量子算法。
Command
>>>>>>>>>>>>>>>>
 每个量子门操作其背后都会转换成一个基础指令，这些指令按照时间顺序存放在QCircuit中，当整个算法结束或者需要计算当前量子线路的某种状态取值时，这些指令会被发送到指定的后端去执行。
Backend
>>>>>>>>>>>>>>>>
 量子计算后端模块，用于执行量子线路，支持Python和C++两种本地后端，QuSprout后端以及第三方后端(目前支持IBM)等。
Gate
>>>>>>>>>>>>>>>>
 量子算法基本组成单元，提供各类量子门操作，包括:H, X, Y, Z，P, R, Rx, Ry, Rz, S, Sdg, T, Tdg，CNOT, Toffoli, Swap等。

.. admonition:: 注解

  QuTrunk默认只提供Python版本的量子计算模拟器，如果用户需要更高性能的模拟器，可以尝试从: https://pypi.org/project/qutrunk/获取QuTrunk源码包进行安装，具体安装步骤可以参考后续的安装章节。